################################################################################
##  Job submission arguments
################################################################################
accounting = dingo
local = True  # Run locally instead of submitting to a cluster
generation-pool = local
n-parallel = 1
request-cpus-importance-sampling = 32
request-cpus = 32
# sampling-requirements = [TARGET.CUDAGlobalMemoryMb>40000]
# extra-lines = [+WantsGPUNode = True]

################################################################################
##  Sampler arguments
################################################################################

model-init = /lus/eagle/projects/RAPINS/parth/Dingo/quasicircular_precessing_spin/3000mpc_hm_HL/model_init.pt
model = /lus/eagle/projects/RAPINS/parth/Dingo/quasicircular_precessing_spin/3000mpc_hm_HL/model_main.pt
device = 'cuda'
num-gnpe-iterations = 10 # Number of Gibbs sampling iterations
num-samples = 10000   # Number of posterior samples
batch-size = 10000  # Batch size for inference
recover-log-prob = true
# prior-dict = {
# luminosity_distance = bilby.gw.prior.UniformComovingVolume(minimum=100, maximum=2000, name='luminosity_distance'),
# }
#printed self._density_recovery_settings and giving that as input (only change 100000 samples) and running this command in dingo repo
density-recovery-settings = {'num_samples': 10000, 'threshold_std': 5, 'nde_settings': {'model': {'posterior_model_type': 'normalizing_flow', 'posterior_kwargs': {'num_flow_steps': 5, 'base_transform_kwargs': {'hidden_dim': 256, 'num_transform_blocks': 4, 'activation': 'elu', 'dropout_probability': 0.1, 'batch_norm': True, 'num_bins': 8, 'base_transform_type': 'rq-coupling'}}}, 'training': {'num_workers': 0, 'train_fraction': 0.9, 'batch_size': 4096, 'epochs': 20, 'optimizer': {'type': 'adam', 'lr': 0.002}, 'scheduler': {'type': 'cosine', 'T_max': 20}}}}
; density-recovery-settings = {"num_samples": 100_000, "nde_settings": {"model": {"posterior_kwargs": {"input_dim": 14, "context_dim": 129}}}}
# runs into key error - KeyError: 'training'

# runs into bilby_pipe.utils.BilbyPipeError:  Your ini file contains duplicate '"type"' keys
; density-recovery-settings = {
;         "num_samples": 400_000,
;         "threshold_std": 5,
;         "nde_settings": {
;             "model": {
;                 "posterior_model_type": "normalizing_flow",
;                 "posterior_kwargs": {
;                     "num_flow_steps": 5,
;                     "input_dim": 14, "context_dim": 129,
;                     "base_transform_kwargs": {
;                         "hidden_dim": 256,
;                         "num_transform_blocks": 4,
;                         "activation": "elu",
;                         "dropout_probability": 0.1,
;                         "batch_norm": True,
;                         "num_bins": 8,
;                         "base_transform_type": "rq-coupling",
;                     },
;                 },
;             },
;             "training": {
;                 "num_workers": 0,
;                 "train_fraction": 0.9,
;                 "batch_size": 4096,
;                 "epochs": 20,
;                 "optimizer": {
;                     "type": "adam",
;                     "lr": 0.002,
;                 },
;                 "scheduler": {
;                     "type": "cosine",
;                     "T_max": 20,
;                 },
;             },
;         },
; }

; density-recovery-settings = {
;     ProxyRecoveryDefault: {
;         nde_settings: {
;             model: {
;                 posterior_kwargs: {
;                     input_dim: 14,
;                     context_dim: 129
;                 }
;             }
;         }
;     }
; }
; density-recovery-settings = {ProxyRecoveryDefault: {nde_settings: {model: {posterior_kwargs: {input_dim: 14, context_dim:129}}}}}
; density-recovery-settings = {

;     input_dim: 14,        # From model.nsf_kwargs.input_dim
;     context_dim: 129     # From model.nsf_kwargs.context_dim

; }
; }
; density-recovery-settings = {
;     "ProxyRecoveryDefault": {
;         "num_samples": 400_000,
;         "threshold_std": 5,
;         "nde_settings": {
;             "model": {
;                 "posterior_model_type": "normalizing_flow",
;                 "posterior_kwargs": {
;                     "num_flow_steps": 5,
;                     "input_dim" = 14        # From model.nsf_kwargs.input_dim
;                     "context_dim" = 129     # From model.nsf_kwargs.context_dim
;                     "base_transform_kwargs": {
;                         "hidden_dim": 256,
;                         "num_transform_blocks": 4,
;                         "activation": "elu",
;                         "dropout_probability": 0.1,
;                         "batch_norm": True,
;                         "num_bins": 8,
;                         "base_transform_type": "rq-coupling",
;                     },
;                 },
;             },
;             "training": {
;                 "num_workers": 0,
;                 "train_fraction": 0.9,
;                 "batch_size": 4096,
;                 "epochs": 20,
;                 "optimizer": {
;                     "type": "adam",
;                     "lr": 0.002,
;                 },
;                 "scheduler": {
;                     "type": "cosine",
;                     "T_max": 20,
;                 },
;             },
;         },
;     },
; }
################################################################################
## Data generation arguments
################################################################################

trigger-time = GW200219_094415
label = GW200219_094415 # Custom label for output files
outdir = outdir_GW200219_094415_new  # Directory to save results

# Detector arguments
channel-dict = {H1:GWOSC, L1:GWOSC}  # Data channels to use (H1, L1 from GWOSC)
psd-length = 128 # Length of power spectral density estimation
sampling-frequency = 4096

################################################################################
## Plotting arguments
################################################################################

plot-corner = true
plot-weights = true
plot-log-probs = true

################################################################################
## Runtime options
################################################################################

verbose = true  # Enable detailed logs
