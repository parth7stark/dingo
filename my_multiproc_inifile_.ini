################################################################################
##  Job submission arguments
################################################################################
accounting = MOFA
local = False  # Run locally instead of submitting to a cluster -- Keeping it False so it doesn't start running
generation-pool = local

# Importance sampling jobs allocation
n-parallel = 4  # Each job runs on 1 GPU (total 4 GPUs in use)
request-cpus-importance-sampling = 8  # Total 32 CPUs â†’ 8 per job

# Resource allocation for inference  #SBATCH params
request-cpus = 32  # Full node CPUs for all jobs - Polaris have 32 CPUS
request-memory = 500  # Full node memory - Polaris have 503GB usable
request-disk = 10  # not needed byt just updating this value in ini file
request-memory-generation = 10
conda-env = /home/parthpatel17/.conda/envs/dingo

################################################################################
##  Sampler arguments
################################################################################

model-init = /lus/eagle/projects/RAPINS/parth/Dingo/quasicircular_aligned_spin/6000mpc_hm_HL/model_init.pt
model = /lus/eagle/projects/RAPINS/parth/Dingo/quasicircular_aligned_spin/6000mpc_hm_HL/model_main.pt
device = 'cuda'
num-gnpe-iterations = 10 # Number of Gibbs sampling iterations
num-samples = 10000   # Number of posterior samples
batch-size = 10000  # Batch size for inference
recover-log-prob = true
# prior-dict = {
# luminosity_distance = bilby.gw.prior.UniformComovingVolume(minimum=100, maximum=2000, name='luminosity_distance'),
# }
#printed self._density_recovery_settings and giving that as input (only change 100000 samples) and running this command in dingo repo
density-recovery-settings = {'num_samples': 10000, 'threshold_std': 5, 'nde_settings': {'model': {'posterior_model_type': 'normalizing_flow', 'posterior_kwargs': {'num_flow_steps': 5, 'base_transform_kwargs': {'hidden_dim': 256, 'num_transform_blocks': 4, 'activation': 'elu', 'dropout_probability': 0.1, 'batch_norm': True, 'num_bins': 8, 'base_transform_type': 'rq-coupling'}}}, 'training': {'num_workers': 0, 'train_fraction': 0.9, 'batch_size': 4096, 'epochs': 20, 'optimizer': {'type': 'adam', 'lr': 0.002}, 'scheduler': {'type': 'cosine', 'T_max': 20}}}}

################################################################################
## Data generation arguments
################################################################################

trigger-time = GW200219_094415
label = GW200219_094415 # Custom label for output files
outdir = outdir_multiproc_GW200219_094415 # Directory to save results

# Detector arguments
channel-dict = {H1:GWOSC, L1:GWOSC}  # Data channels to use (H1, L1 from GWOSC)
psd-length = 128 # Length of power spectral density estimation
sampling-frequency = 4096

################################################################################
## Plotting arguments
################################################################################

plot-corner = true
plot-weights = true
plot-log-probs = true

################################################################################
## Runtime options
################################################################################

verbose = true  # Enable detailed logs
